1.1    What does SDLC stand for?
Software development life cycle

1.2   What exception is thrown when you divide a number by 0? 
ZeroDivisonError

1.3   What is the git command that moves code from the local repository
to the remote repository? 
git push

1.4   What does NULL represent in a database?
it indicates that the data field does not have a value in the database

1.5   Name 2 responsibilities of the Scrum Master 
A: Organising planning, daily stand ups, reviews and retrospectives
B: help identify and remove obstacles in the progress and help workflow.

1.6   Name 2 debugging methods, and when you would use them. 
Print statments at points in the code to see what is happening and track progress.
In built Debugger tools set break points to pause and check smaller portions of code at a times.

1.7   Looking at the following code, describe a case where this function
           would throw an error when called. Describe this case and talk about
           what exception handling youâ€™ll need. 

def can_pay(price, cash_given):
   if cash_given >= price:
       return True
   else:
       return False

Would throw an error if price or cash given are not a numeric number youu could have a try-except block to print a message to enter numeric values

1.8    What is git branching? Explain how it is used in Git.   
Allows many developers to work on different features or code without messing up or changing others code.
they can be used for features or bug fixing and developers wroking at the same times or experement with out losing code. Changes can be easily merged back to the maain code when they are good to go.

1.9  Design a restaurant ordering system. 
You do not need to write code, but describe a high-level approach: 
a. Draw a list of key requirements
- user auth 
- menu management 
- placing orders and customizing
-payment 
- tracking for customers
- inventory management

b. What are your main considerations and problems?
- data security 
- Peak hours servor load
- order cancelling 
- Diet preferances and allergies

c. What components or tools would you potentially use? 
- Database
- Payment gateways 
- APIs
- Data encryption 
- Scaleability design the system to grow
- clear easy UI